
package _0._0._0._0._8080.motorbikeservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MotorbikeWebService", targetNamespace = "http://0.0.0.0:8080/MotorbikeService")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MotorbikeWebService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param personRequest
     * @return
     *     returns java.lang.String
     * @throws IllegalNameException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.UpdateResponse")
    @Action(input = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/updateRequest", output = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/updateResponse", fault = {
        @FaultAction(className = IllegalNameException.class, value = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/update/Fault/IllegalNameException")
    })
    public String update(
        @WebParam(name = "personRequest", targetNamespace = "")
        long personRequest,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5)
        throws IllegalNameException
    ;

    /**
     * 
     * @param personRequest
     * @return
     *     returns java.lang.String
     * @throws IllegalNameException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.DeleteResponse")
    @Action(input = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/deleteRequest", output = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/deleteResponse", fault = {
        @FaultAction(className = IllegalNameException.class, value = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/delete/Fault/IllegalNameException")
    })
    public String delete(
        @WebParam(name = "personRequest", targetNamespace = "")
        long personRequest)
        throws IllegalNameException
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param personRequest
     * @return
     *     returns long
     * @throws IllegalNameException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.CreateResponse")
    @Action(input = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/createRequest", output = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/createResponse", fault = {
        @FaultAction(className = IllegalNameException.class, value = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/create/Fault/IllegalNameException")
    })
    public long create(
        @WebParam(name = "personRequest", targetNamespace = "")
        String personRequest,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws IllegalNameException
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param personRequest
     * @return
     *     returns java.util.List<_0._0._0._0._8080.motorbikeservice.Motorbike>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFind", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.GetFind")
    @ResponseWrapper(localName = "getFindResponse", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.GetFindResponse")
    @Action(input = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/getFindRequest", output = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/getFindResponse")
    public List<Motorbike> getFind(
        @WebParam(name = "personRequest", targetNamespace = "")
        long personRequest,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @return
     *     returns java.util.List<_0._0._0._0._8080.motorbikeservice.Motorbike>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBike", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.GetBike")
    @ResponseWrapper(localName = "getBikeResponse", targetNamespace = "http://0.0.0.0:8080/MotorbikeService", className = "_0._0._0._0._8080.motorbikeservice.GetBikeResponse")
    @Action(input = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/getBikeRequest", output = "http://0.0.0.0:8080/MotorbikeService/MotorbikeWebService/getBikeResponse")
    public List<Motorbike> getBike();

}
